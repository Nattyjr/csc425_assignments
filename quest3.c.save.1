Nate
/****

#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>

int main() {
    pid_t pid = fork();
    
    if (pid < 0) {
        fprintf(stderr, "Fork failed\n");
        return 1;
    } else if (pid == 0) {
        // Child process
        char* args[] = { "/bin/ls", "-l", NULL };
        
        // execl
        execl("/bin/ls", "/bin/ls", "-l", NULL);
        
        // execle
        char* env[] = { NULL };
        execle("/bin/ls", "/bin/ls", "-l", NULL, env);
        
        // execlp
        execlp("ls", "ls", "-l", NULL);
        
        // execv
        execv("/bin/ls", args);
        
        // execvp
        execvp("ls", args);
        
        // execvpe
        char* envp[] = { NULL };
        execvpe("ls", args, envp);
        
        fprintf(stderr, "Exec failed\n");
        return 1;
    } else {
        // Parent process
        wait(NULL);
    }
    
   
